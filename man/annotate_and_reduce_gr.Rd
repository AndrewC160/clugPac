% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/annotate_and_reduce_gr.R
\name{annotate_and_reduce_gr}
\alias{annotate_and_reduce_gr}
\title{Annotate and reduce GR}
\usage{
annotate_and_reduce_gr(
  gr_in,
  retain_funcs,
  include_n = FALSE,
  include_queryHits = FALSE
)
}
\arguments{
\item{gr_in}{GenomicRanges object to reduce.}

\item{retain_funcs}{List of functions to apply to retained column names, named as the columns to which they will apply. All column names must be present in the metadata columns of <gr_in> or an error will be thrown.}

\item{include_n}{Should a column 'n' tallying the total regions overlapping a reduced region be provided? Defaults to FALSE.}

\item{include_queryHits}{Should a column 'queryHits' containing a list of indices from the original GRange be included? Defaults to FALSE.}
}
\description{
Given a GRanges object, flatten that object using GenomicRanges::reduce, but
specify columns and in-place functions via the <retain_funcs> list argument
to combine and retain column contents. For example, in the following list:

list(score=max,padj=min,summits=list,annots=function(x) paste(unique(x),collapse=","))

...the "score" column would contain the maximum value from all entries,
"padj" would contain the minimum "padj" value, "summits" would contain a list
of all "summit" values, and "annots" would contain a string of comma-
separated unique values from "annots".

Note that this function is considerably slower than a standard reduction, and
aggregation functions which involve string manipulation (such as the example
paste(unique(x)) above) are considerably slower than returning a list.
}
